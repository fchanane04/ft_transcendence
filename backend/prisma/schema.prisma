generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Message {
  id        Int      @id @default(autoincrement())
  content   String
  sender    User?
  createdAt DateTime @default(now())
  channelId Int
  channel   Channel  @relation(fields: [channelId], references: [id])
}

model Channel {
  id                 Int                 @id @default(autoincrement())
  name               String
  image              String
  type               ChannelType?
  messages           Message[]
  channelMemberships ChannelMembership[]
  createdAt          DateTime            @default(now())
  updatedAt          DateTime            @updatedAt
}

model ChannelType {
  id        Int      @id @default(autoincrement())
  name      String
  secret    String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  channelId Int      @unique
  channel   Channel  @relation(fields: [channelId], references: [id])
}

model ChannelMembership {
  id          Int      @id @default(autoincrement())
  user        User     @relation(fields: [userId], references: [id])
  userId      Int
  isActive    Boolean  @default(true)
  isModerator Boolean  @default(true)
  isOwner     Boolean  @default(true)
  channelId   Int      @unique
  channel     Channel  @relation(fields: [channelId], references: [id])
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model User {
  id                Int                 @id @default(autoincrement())
  email             String
  hash              String
  firstName         String?
  lastName          String?
  messageId         Int?                @unique
  message           Message?            @relation(fields: [messageId], references: [id])
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  ChannelMembership ChannelMembership[]
}
